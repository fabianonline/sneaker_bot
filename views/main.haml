%h1 Sneak am #{@sneak.time.strftime "%d.%m.%Y"}
%strong
	%a{:href=>url("/help")} Hilfe

%p
	- if @prev_sneak
		%a{:href=>url("/#{@prev_sneak.id}")} &laquo; Vorige Sneak
	- if @prev_sneak && @next_sneak
		|
	- if @next_sneak
		%a{:href=>url("/#{@next_sneak.id}")} Nächste Sneak &raquo;

%strong Bonus-Punkte für diese Sneak:
= @sneak.bonus_points

%br/

%section{:style=>"float: left;"}
	%h2 Historie
	%table
		%tr
			%th Zeitpunkt
			%th User
			%th Meldung
		
		- @sneak.participations.all(:order=>:time).each do |p|
			%tr
				%td= p.time.strftime("%d.%m. %H:%M") rescue "?"
				%td= p.user.to_s
				%td= p.text

%section
	%h2 Anmeldungen
	%table
		%tr
			%th Name
			%th PSP
			%th Bezahlt

		- last_user = nil
		- count = 0
		- @sneak.participations.all(:active=>true, :sum.gt=>0).collect{|p| [p]*p.sum}.flatten.sort_by{|p| p.user.to_s}.each do |p|
			- count = last_user==p.user ? count+1 : 0
			- last_user = p.user
			%tr
				- if count==0
					%td= p.user
				- else
					%td{:style=>"padding-left: 10px;"}= "+#{count}"
				%td.center= p.psp ? "X" : "-"
				%td.center 
					- if p.frei && count==0
						= "Freikarte"
					- elsif p.user.bonus_points>=5 && !@sneak.double? && count==0
						= "Bonus"
					- else
						= ""

		%tr.sum
			%td Summe
			- reservation_sum = @sneak.reservations.collect(&:count).reduce(&:+)
			%td.center{:colspan=>"2"}= "#{@sneak.sum} (#{reservation_sum} reserviert), davon #{@sneak.participations.all(:active=>true).select{|p| p.sum>0 && p.user.bonus_points>=5 && !@sneak.double?}.count} mit Bonuskarten"

- sum = @sneak.participations.all(:active=>true).collect(&:sum).inject(&:+)
- bonus_use = @sneak.double? ? [] : @sneak.bonuscards.select{|c| c.points == 5}
- bonus_fill = Bonuscard.all(:used_by_user=>nil, :points.lte=>5-@sneak.bonus_points, :points.gt=>0, :order=>[:points.desc, :id], :limit=>sum-bonus_use.count) rescue []
- max_id = Bonuscard.last[:id] rescue 0
- bonus_new = (0..(sum-bonus_use.count-bonus_fill.count-1)).to_a.collect{|i|Bonuscard.new(:id=>max_id+1+i)} rescue []
%section
	%h2 Bonuskarten
	%table
		%tr
			%th{:colspan=>"2"} Verbrauchen
			%th{:colspan=>"2"} Auffüllen
			%th{:colspan=>"2"} Ganz neu

		- [bonus_new.count, bonus_fill.count, bonus_use.count].max.times do |i|
			%tr
				%td.has_box= bonus_use[i][:id] rescue ""
				%td.box
				%td.has_box= bonus_fill[i][:id] rescue ""
				%td.box
				%td.has_box= bonus_new[i][:id] rescue ""
				%td.box

%section
	%h2 Bonuspunkte
	%table
		%tr
			%th Name
			%th Punkte
			%th Standard

		- User.all.sort_by{|u| u.to_s}.each do |u|
			%tr
				%td= u
				%td= u.bonus_points
				%td= u.auto
		
		%tr.sum
			%td Summe
			%td{:colspan=>"2"}= User.all.collect(&:bonus_points).reduce(&:+)

%section{:float=>"right"}
	%h2 Reservierungen
	%table
		%tr
			%th Nummer
			%th Anzahl

		- @sneak.reservations.each do |r|
			%tr
				%td= r.number
				%td= r.count

%section{:float=>"right"}
	%h2 Bonuskarten
	%table
		%tr
			%th Nummer
			%th Punkte

		- Bonuscard.all(:used_at_sneak=>nil, :order=>[:points.desc, :id]).each do |bonus|
			%tr
				%td= bonus[:id]
				%td= bonus.points

